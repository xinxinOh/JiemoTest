<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.neuedu.JiemoTest.dao.ExamMapper">
  <resultMap id="BaseResultMap" type="com.neuedu.JiemoTest.entity.Exam">
    <id column="examId" jdbcType="INTEGER" property="examid" />
    <result column="examTitle" jdbcType="VARCHAR" property="examtitle" />
    <result column="examIntroduction" jdbcType="VARCHAR" property="examintroduction" />
    <result column="userId" jdbcType="INTEGER" property="userid" />
    <result column="sourceExamId" jdbcType="INTEGER" property="sourceexamid" />
    <result column="editTime" jdbcType="INTEGER" property="edittime" />
    <result column="startTime" jdbcType="INTEGER" property="starttime" />
    <result column="endTime" jdbcType="INTEGER" property="endtime" />
    <result column="duration" jdbcType="INTEGER" property="duration" />
    <result column="maxTimes" jdbcType="INTEGER" property="maxtimes" />
    <result column="questionNum" jdbcType="INTEGER" property="questionnum" />
    <result column="pointsSum" jdbcType="INTEGER" property="pointssum" />
    <result column="examState" jdbcType="INTEGER" property="examstate" />
    <result column="spare_1" jdbcType="INTEGER" property="spare1" />
    <result column="spare_2" jdbcType="INTEGER" property="spare2" />
    <result column="spare_3" jdbcType="VARCHAR" property="spare3" />
    <result column="spare_4" jdbcType="VARCHAR" property="spare4" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    examId, examTitle, examIntroduction, userId, sourceExamId, editTime, startTime, endTime, 
    duration, maxTimes, questionNum, pointsSum, examState, spare_1, spare_2, spare_3, 
    spare_4
  </sql>
  <select id="selectByExample" parameterType="com.neuedu.JiemoTest.entity.ExamExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from exam
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from exam
    where examId = #{examid,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from exam
    where examId = #{examid,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.neuedu.JiemoTest.entity.ExamExample">
    delete from exam
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>

  <insert id="insertSelective" parameterType="com.neuedu.JiemoTest.entity.Exam">
    insert into exam
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="examid != null">
        examId,
      </if>
      <if test="examtitle != null">
        examTitle,
      </if>
      <if test="examintroduction != null">
        examIntroduction,
      </if>
      <if test="userid != null">
        userId,
      </if>
      <if test="sourceexamid != null">
        sourceExamId,
      </if>
      <if test="edittime != null">
        editTime,
      </if>
      <if test="starttime != null">
        startTime,
      </if>
      <if test="endtime != null">
        endTime,
      </if>
      <if test="duration != null">
        duration,
      </if>
      <if test="maxtimes != null">
        maxTimes,
      </if>
      <if test="questionnum != null">
        questionNum,
      </if>
      <if test="pointssum != null">
        pointsSum,
      </if>
      <if test="examstate != null">
        examState,
      </if>
      <if test="spare1 != null">
        spare_1,
      </if>
      <if test="spare2 != null">
        spare_2,
      </if>
      <if test="spare3 != null">
        spare_3,
      </if>
      <if test="spare4 != null">
        spare_4,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="examid != null">
        #{examid,jdbcType=INTEGER},
      </if>
      <if test="examtitle != null">
        #{examtitle,jdbcType=VARCHAR},
      </if>
      <if test="examintroduction != null">
        #{examintroduction,jdbcType=VARCHAR},
      </if>
      <if test="userid != null">
        #{userid,jdbcType=INTEGER},
      </if>
      <if test="sourceexamid != null">
        #{sourceexamid,jdbcType=INTEGER},
      </if>
      <if test="edittime != null">
        #{edittime,jdbcType=INTEGER},
      </if>
      <if test="starttime != null">
        #{starttime,jdbcType=INTEGER},
      </if>
      <if test="endtime != null">
        #{endtime,jdbcType=INTEGER},
      </if>
      <if test="duration != null">
        #{duration,jdbcType=INTEGER},
      </if>
      <if test="maxtimes != null">
        #{maxtimes,jdbcType=INTEGER},
      </if>
      <if test="questionnum != null">
        #{questionnum,jdbcType=INTEGER},
      </if>
      <if test="pointssum != null">
        #{pointssum,jdbcType=INTEGER},
      </if>
      <if test="examstate != null">
        #{examstate,jdbcType=INTEGER},
      </if>
      <if test="spare1 != null">
        #{spare1,jdbcType=INTEGER},
      </if>
      <if test="spare2 != null">
        #{spare2,jdbcType=INTEGER},
      </if>
      <if test="spare3 != null">
        #{spare3,jdbcType=VARCHAR},
      </if>
      <if test="spare4 != null">
        #{spare4,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.neuedu.JiemoTest.entity.ExamExample" resultType="java.lang.Integer">
    select count(*) from exam
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update exam
    <set>
      <if test="record.examid != null">
        examId = #{record.examid,jdbcType=INTEGER},
      </if>
      <if test="record.examtitle != null">
        examTitle = #{record.examtitle,jdbcType=VARCHAR},
      </if>
      <if test="record.examintroduction != null">
        examIntroduction = #{record.examintroduction,jdbcType=VARCHAR},
      </if>
      <if test="record.userid != null">
        userId = #{record.userid,jdbcType=INTEGER},
      </if>
      <if test="record.sourceexamid != null">
        sourceExamId = #{record.sourceexamid,jdbcType=INTEGER},
      </if>
      <if test="record.edittime != null">
        editTime = #{record.edittime,jdbcType=INTEGER},
      </if>
      <if test="record.starttime != null">
        startTime = #{record.starttime,jdbcType=INTEGER},
      </if>
      <if test="record.endtime != null">
        endTime = #{record.endtime,jdbcType=INTEGER},
      </if>
      <if test="record.duration != null">
        duration = #{record.duration,jdbcType=INTEGER},
      </if>
      <if test="record.maxtimes != null">
        maxTimes = #{record.maxtimes,jdbcType=INTEGER},
      </if>
      <if test="record.questionnum != null">
        questionNum = #{record.questionnum,jdbcType=INTEGER},
      </if>
      <if test="record.pointssum != null">
        pointsSum = #{record.pointssum,jdbcType=INTEGER},
      </if>
      <if test="record.examstate != null">
        examState = #{record.examstate,jdbcType=INTEGER},
      </if>
      <if test="record.spare1 != null">
        spare_1 = #{record.spare1,jdbcType=INTEGER},
      </if>
      <if test="record.spare2 != null">
        spare_2 = #{record.spare2,jdbcType=INTEGER},
      </if>
      <if test="record.spare3 != null">
        spare_3 = #{record.spare3,jdbcType=VARCHAR},
      </if>
      <if test="record.spare4 != null">
        spare_4 = #{record.spare4,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update exam
    set examId = #{record.examid,jdbcType=INTEGER},
      examTitle = #{record.examtitle,jdbcType=VARCHAR},
      examIntroduction = #{record.examintroduction,jdbcType=VARCHAR},
      userId = #{record.userid,jdbcType=INTEGER},
      sourceExamId = #{record.sourceexamid,jdbcType=INTEGER},
      editTime = #{record.edittime,jdbcType=INTEGER},
      startTime = #{record.starttime,jdbcType=INTEGER},
      endTime = #{record.endtime,jdbcType=INTEGER},
      duration = #{record.duration,jdbcType=INTEGER},
      maxTimes = #{record.maxtimes,jdbcType=INTEGER},
      questionNum = #{record.questionnum,jdbcType=INTEGER},
      pointsSum = #{record.pointssum,jdbcType=INTEGER},
      examState = #{record.examstate,jdbcType=INTEGER},
      spare_1 = #{record.spare1,jdbcType=INTEGER},
      spare_2 = #{record.spare2,jdbcType=INTEGER},
      spare_3 = #{record.spare3,jdbcType=VARCHAR},
      spare_4 = #{record.spare4,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.neuedu.JiemoTest.entity.Exam">
    update exam
    <set>
      <if test="examtitle != null">
        examTitle = #{examtitle,jdbcType=VARCHAR},
      </if>
      <if test="examintroduction != null">
        examIntroduction = #{examintroduction,jdbcType=VARCHAR},
      </if>
      <if test="userid != null">
        userId = #{userid,jdbcType=INTEGER},
      </if>
      <if test="sourceexamid != null">
        sourceExamId = #{sourceexamid,jdbcType=INTEGER},
      </if>
      <if test="edittime != null">
        editTime = #{edittime,jdbcType=INTEGER},
      </if>
      <if test="starttime != null">
        startTime = #{starttime,jdbcType=INTEGER},
      </if>
      <if test="endtime != null">
        endTime = #{endtime,jdbcType=INTEGER},
      </if>
      <if test="duration != null">
        duration = #{duration,jdbcType=INTEGER},
      </if>
      <if test="maxtimes != null">
        maxTimes = #{maxtimes,jdbcType=INTEGER},
      </if>
      <if test="questionnum != null">
        questionNum = #{questionnum,jdbcType=INTEGER},
      </if>
      <if test="pointssum != null">
        pointsSum = #{pointssum,jdbcType=INTEGER},
      </if>
      <if test="examstate != null">
        examState = #{examstate,jdbcType=INTEGER},
      </if>
      <if test="spare1 != null">
        spare_1 = #{spare1,jdbcType=INTEGER},
      </if>
      <if test="spare2 != null">
        spare_2 = #{spare2,jdbcType=INTEGER},
      </if>
      <if test="spare3 != null">
        spare_3 = #{spare3,jdbcType=VARCHAR},
      </if>
      <if test="spare4 != null">
        spare_4 = #{spare4,jdbcType=VARCHAR},
      </if>
    </set>
    where examId = #{examid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.neuedu.JiemoTest.entity.Exam">
    update exam
    set examTitle = #{examtitle,jdbcType=VARCHAR},
      examIntroduction = #{examintroduction,jdbcType=VARCHAR},
      userId = #{userid,jdbcType=INTEGER},
      sourceExamId = #{sourceexamid,jdbcType=INTEGER},
      editTime = #{edittime,jdbcType=INTEGER},
      startTime = #{starttime,jdbcType=INTEGER},
      endTime = #{endtime,jdbcType=INTEGER},
      duration = #{duration,jdbcType=INTEGER},
      maxTimes = #{maxtimes,jdbcType=INTEGER},
      questionNum = #{questionnum,jdbcType=INTEGER},
      pointsSum = #{pointssum,jdbcType=INTEGER},
      examState = #{examstate,jdbcType=INTEGER},
      spare_1 = #{spare1,jdbcType=INTEGER},
      spare_2 = #{spare2,jdbcType=INTEGER},
      spare_3 = #{spare3,jdbcType=VARCHAR},
      spare_4 = #{spare4,jdbcType=VARCHAR}
    where examId = #{examid,jdbcType=INTEGER}
  </update>

  
  <insert id="insert" keyProperty="examid" parameterType="com.neuedu.JiemoTest.entity.Exam" useGeneratedKeys="true">
      insert into exam (examId, examTitle, examIntroduction, 
      userId, sourceExamId, editTime, 
      startTime, endTime, duration, 
      maxTimes, questionNum, pointsSum, 
      examState, spare_1, spare_2, 
      spare_3, spare_4)
    values (#{examid,jdbcType=INTEGER}, #{examtitle,jdbcType=VARCHAR}, #{examintroduction,jdbcType=VARCHAR}, 
      #{userid,jdbcType=INTEGER}, #{sourceexamid,jdbcType=INTEGER}, #{edittime,jdbcType=INTEGER}, 
      #{starttime,jdbcType=INTEGER}, #{endtime,jdbcType=INTEGER}, #{duration,jdbcType=INTEGER}, 
      #{maxtimes,jdbcType=INTEGER}, #{questionnum,jdbcType=INTEGER}, #{pointssum,jdbcType=INTEGER}, 
      #{examstate,jdbcType=INTEGER}, #{spare1,jdbcType=INTEGER}, #{spare2,jdbcType=INTEGER}, 
      #{spare3,jdbcType=VARCHAR}, #{spare4,jdbcType=VARCHAR})
 </insert>
  
</mapper>