#不能在war包的项目中声明tomcat的端口号,而是由服务器tomcat自己决定的
server.port=8081

####################################################
#设置页面模板的属性
####################################################
spring.thymeleaf.prefix=classpath:/static/
# 后缀
spring.thymeleaf.suffix=.html
# 模板格式
spring.thymeleaf.mode=HTML5
spring.thymeleaf.encoding=UTF-8
spring.thymeleaf.content-type=text/html
spring.thymeleaf.cache=false


####################################################
#文件上传
####################################################
# 上传文件总的最大值
spring.servlet.multipart.max-request-size=10MB
# 单个文件的最大值
spring.servlet.multipart.max-file-size=10MB
#配置文件上传目录权限
spring.mvc.static-path-pattern=/upload/**
spring.resources.static-locations=/upload/


####################################################
# 指定将项目中所有的静态资源配置在static下面   静态资源  css  ;  js  ;img  
####################################################
# 过滤http的url中包含 /static/** 之后接任意字符,当是这种形式时,表示要寻找静态资源,那么...
spring.mvc.static-path-pattern=/static/**
# 则将该url引导到以下的服务器路径下去寻找静态资源
spring.resources.static-locations=classpath:/static/

# 网页中引入静态资源需要使用模板语法  th:href="@{static/css/style1.css}"
# 或者th:src="@{static/js/jquery-1.8.3.min.js}"
# 或者<img alt="" src="img/box.png" th:src="@{static/img/box.png}">
# 这样做的好处在于 ,即使是静态页面也能显示出好看的效果 ,而切换到springboot框架里 ,部署到服务器上,就用后面的th:*** ,代替之前的静态资源了