<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.neuedu.JiemoTest.dao.UserInfoMapper" >
  <resultMap id="BaseResultMap" type="com.neuedu.JiemoTest.entity.UserInfo" >
    <id column="userId" property="userid" jdbcType="INTEGER" />
    <result column="username" property="username" jdbcType="VARCHAR" />
    <result column="password" property="password" jdbcType="VARCHAR" />
    <result column="bonusPoints" property="bonuspoints" jdbcType="INTEGER" />
    <result column="phoneNumber" property="phonenumber" jdbcType="VARCHAR" />
    <result column="email" property="email" jdbcType="VARCHAR" />
    <result column="introduction" property="introduction" jdbcType="VARCHAR" />
    <result column="affiliated" property="affiliated" jdbcType="VARCHAR" />
    <result column="nickname" property="nickname" jdbcType="VARCHAR" />
    <result column="userType" property="usertype" jdbcType="INTEGER" />
    <result column="spare_1" property="spare1" jdbcType="INTEGER" />
    <result column="spare_2" property="spare2" jdbcType="INTEGER" />
    <result column="spare_3" property="spare3" jdbcType="VARCHAR" />
    <result column="spare_4" property="spare4" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    userId, username, password, bonusPoints, phoneNumber, email, introduction, affiliated, 
    nickname, userType, spare_1, spare_2, spare_3, spare_4
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.neuedu.JiemoTest.entity.UserInfoExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from user_info
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from user_info
    where userId = #{userid,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from user_info
    where userId = #{userid,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.neuedu.JiemoTest.entity.UserInfoExample" >
    delete from user_info
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.neuedu.JiemoTest.entity.UserInfo" >
    insert into user_info (userId, username, password, 
      bonusPoints, phoneNumber, email, 
      introduction, affiliated, nickname, 
      userType, spare_1, spare_2, 
      spare_3, spare_4)
    values (#{userid,jdbcType=INTEGER}, #{username,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, 
      #{bonuspoints,jdbcType=INTEGER}, #{phonenumber,jdbcType=VARCHAR}, #{email,jdbcType=VARCHAR}, 
      #{introduction,jdbcType=VARCHAR}, #{affiliated,jdbcType=VARCHAR}, #{nickname,jdbcType=VARCHAR}, 
      #{usertype,jdbcType=INTEGER}, #{spare1,jdbcType=INTEGER}, #{spare2,jdbcType=INTEGER}, 
      #{spare3,jdbcType=VARCHAR}, #{spare4,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.neuedu.JiemoTest.entity.UserInfo" >
    insert into user_info
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="userid != null" >
        userId,
      </if>
      <if test="username != null" >
        username,
      </if>
      <if test="password != null" >
        password,
      </if>
      <if test="bonuspoints != null" >
        bonusPoints,
      </if>
      <if test="phonenumber != null" >
        phoneNumber,
      </if>
      <if test="email != null" >
        email,
      </if>
      <if test="introduction != null" >
        introduction,
      </if>
      <if test="affiliated != null" >
        affiliated,
      </if>
      <if test="nickname != null" >
        nickname,
      </if>
      <if test="usertype != null" >
        userType,
      </if>
      <if test="spare1 != null" >
        spare_1,
      </if>
      <if test="spare2 != null" >
        spare_2,
      </if>
      <if test="spare3 != null" >
        spare_3,
      </if>
      <if test="spare4 != null" >
        spare_4,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="userid != null" >
        #{userid,jdbcType=INTEGER},
      </if>
      <if test="username != null" >
        #{username,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="bonuspoints != null" >
        #{bonuspoints,jdbcType=INTEGER},
      </if>
      <if test="phonenumber != null" >
        #{phonenumber,jdbcType=VARCHAR},
      </if>
      <if test="email != null" >
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="introduction != null" >
        #{introduction,jdbcType=VARCHAR},
      </if>
      <if test="affiliated != null" >
        #{affiliated,jdbcType=VARCHAR},
      </if>
      <if test="nickname != null" >
        #{nickname,jdbcType=VARCHAR},
      </if>
      <if test="usertype != null" >
        #{usertype,jdbcType=INTEGER},
      </if>
      <if test="spare1 != null" >
        #{spare1,jdbcType=INTEGER},
      </if>
      <if test="spare2 != null" >
        #{spare2,jdbcType=INTEGER},
      </if>
      <if test="spare3 != null" >
        #{spare3,jdbcType=VARCHAR},
      </if>
      <if test="spare4 != null" >
        #{spare4,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.neuedu.JiemoTest.entity.UserInfoExample" resultType="java.lang.Integer" >
    select count(*) from user_info
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update user_info
    <set >
      <if test="record.userid != null" >
        userId = #{record.userid,jdbcType=INTEGER},
      </if>
      <if test="record.username != null" >
        username = #{record.username,jdbcType=VARCHAR},
      </if>
      <if test="record.password != null" >
        password = #{record.password,jdbcType=VARCHAR},
      </if>
      <if test="record.bonuspoints != null" >
        bonusPoints = #{record.bonuspoints,jdbcType=INTEGER},
      </if>
      <if test="record.phonenumber != null" >
        phoneNumber = #{record.phonenumber,jdbcType=VARCHAR},
      </if>
      <if test="record.email != null" >
        email = #{record.email,jdbcType=VARCHAR},
      </if>
      <if test="record.introduction != null" >
        introduction = #{record.introduction,jdbcType=VARCHAR},
      </if>
      <if test="record.affiliated != null" >
        affiliated = #{record.affiliated,jdbcType=VARCHAR},
      </if>
      <if test="record.nickname != null" >
        nickname = #{record.nickname,jdbcType=VARCHAR},
      </if>
      <if test="record.usertype != null" >
        userType = #{record.usertype,jdbcType=INTEGER},
      </if>
      <if test="record.spare1 != null" >
        spare_1 = #{record.spare1,jdbcType=INTEGER},
      </if>
      <if test="record.spare2 != null" >
        spare_2 = #{record.spare2,jdbcType=INTEGER},
      </if>
      <if test="record.spare3 != null" >
        spare_3 = #{record.spare3,jdbcType=VARCHAR},
      </if>
      <if test="record.spare4 != null" >
        spare_4 = #{record.spare4,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update user_info
    set userId = #{record.userid,jdbcType=INTEGER},
      username = #{record.username,jdbcType=VARCHAR},
      password = #{record.password,jdbcType=VARCHAR},
      bonusPoints = #{record.bonuspoints,jdbcType=INTEGER},
      phoneNumber = #{record.phonenumber,jdbcType=VARCHAR},
      email = #{record.email,jdbcType=VARCHAR},
      introduction = #{record.introduction,jdbcType=VARCHAR},
      affiliated = #{record.affiliated,jdbcType=VARCHAR},
      nickname = #{record.nickname,jdbcType=VARCHAR},
      userType = #{record.usertype,jdbcType=INTEGER},
      spare_1 = #{record.spare1,jdbcType=INTEGER},
      spare_2 = #{record.spare2,jdbcType=INTEGER},
      spare_3 = #{record.spare3,jdbcType=VARCHAR},
      spare_4 = #{record.spare4,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.neuedu.JiemoTest.entity.UserInfo" >
    update user_info
    <set >
      <if test="username != null" >
        username = #{username,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="bonuspoints != null" >
        bonusPoints = #{bonuspoints,jdbcType=INTEGER},
      </if>
      <if test="phonenumber != null" >
        phoneNumber = #{phonenumber,jdbcType=VARCHAR},
      </if>
      <if test="email != null" >
        email = #{email,jdbcType=VARCHAR},
      </if>
      <if test="introduction != null" >
        introduction = #{introduction,jdbcType=VARCHAR},
      </if>
      <if test="affiliated != null" >
        affiliated = #{affiliated,jdbcType=VARCHAR},
      </if>
      <if test="nickname != null" >
        nickname = #{nickname,jdbcType=VARCHAR},
      </if>
      <if test="usertype != null" >
        userType = #{usertype,jdbcType=INTEGER},
      </if>
      <if test="spare1 != null" >
        spare_1 = #{spare1,jdbcType=INTEGER},
      </if>
      <if test="spare2 != null" >
        spare_2 = #{spare2,jdbcType=INTEGER},
      </if>
      <if test="spare3 != null" >
        spare_3 = #{spare3,jdbcType=VARCHAR},
      </if>
      <if test="spare4 != null" >
        spare_4 = #{spare4,jdbcType=VARCHAR},
      </if>
    </set>
    where userId = #{userid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.neuedu.JiemoTest.entity.UserInfo" >
    update user_info
    set username = #{username,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      bonusPoints = #{bonuspoints,jdbcType=INTEGER},
      phoneNumber = #{phonenumber,jdbcType=VARCHAR},
      email = #{email,jdbcType=VARCHAR},
      introduction = #{introduction,jdbcType=VARCHAR},
      affiliated = #{affiliated,jdbcType=VARCHAR},
      nickname = #{nickname,jdbcType=VARCHAR},
      userType = #{usertype,jdbcType=INTEGER},
      spare_1 = #{spare1,jdbcType=INTEGER},
      spare_2 = #{spare2,jdbcType=INTEGER},
      spare_3 = #{spare3,jdbcType=VARCHAR},
      spare_4 = #{spare4,jdbcType=VARCHAR}
    where userId = #{userid,jdbcType=INTEGER}
  </update>
</mapper>