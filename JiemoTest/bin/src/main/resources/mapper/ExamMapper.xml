<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.neuedu.JiemoTest.dao.ExamMapper" >
  <resultMap id="BaseResultMap" type="com.neuedu.JiemoTest.entity.Exam" >
    <id column="examId" property="examid" jdbcType="INTEGER" />
    <result column="userId" property="userid" jdbcType="INTEGER" />
    <result column="sourceExamId" property="sourceexamid" jdbcType="INTEGER" />
    <result column="editTime" property="edittime" jdbcType="INTEGER" />
    <result column="startTime" property="starttime" jdbcType="INTEGER" />
    <result column="endTime" property="endtime" jdbcType="INTEGER" />
    <result column="duration" property="duration" jdbcType="INTEGER" />
    <result column="maxTimes" property="maxtimes" jdbcType="INTEGER" />
    <result column="questionNum" property="questionnum" jdbcType="INTEGER" />
    <result column="pointsSum" property="pointssum" jdbcType="INTEGER" />
    <result column="examState" property="examstate" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    examId, userId, sourceExamId, editTime, startTime, endTime, duration, maxTimes, questionNum, 
    pointsSum, examState
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.neuedu.JiemoTest.entity.ExamExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from exam
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from exam
    where examId = #{examid,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from exam
    where examId = #{examid,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.neuedu.JiemoTest.entity.ExamExample" >
    delete from exam
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.neuedu.JiemoTest.entity.Exam" >
    insert into exam (examId, userId, sourceExamId, 
      editTime, startTime, endTime, 
      duration, maxTimes, questionNum, 
      pointsSum, examState)
    values (#{examid,jdbcType=INTEGER}, #{userid,jdbcType=INTEGER}, #{sourceexamid,jdbcType=INTEGER}, 
      #{edittime,jdbcType=INTEGER}, #{starttime,jdbcType=INTEGER}, #{endtime,jdbcType=INTEGER}, 
      #{duration,jdbcType=INTEGER}, #{maxtimes,jdbcType=INTEGER}, #{questionnum,jdbcType=INTEGER}, 
      #{pointssum,jdbcType=INTEGER}, #{examstate,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.neuedu.JiemoTest.entity.Exam" >
    insert into exam
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="examid != null" >
        examId,
      </if>
      <if test="userid != null" >
        userId,
      </if>
      <if test="sourceexamid != null" >
        sourceExamId,
      </if>
      <if test="edittime != null" >
        editTime,
      </if>
      <if test="starttime != null" >
        startTime,
      </if>
      <if test="endtime != null" >
        endTime,
      </if>
      <if test="duration != null" >
        duration,
      </if>
      <if test="maxtimes != null" >
        maxTimes,
      </if>
      <if test="questionnum != null" >
        questionNum,
      </if>
      <if test="pointssum != null" >
        pointsSum,
      </if>
      <if test="examstate != null" >
        examState,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="examid != null" >
        #{examid,jdbcType=INTEGER},
      </if>
      <if test="userid != null" >
        #{userid,jdbcType=INTEGER},
      </if>
      <if test="sourceexamid != null" >
        #{sourceexamid,jdbcType=INTEGER},
      </if>
      <if test="edittime != null" >
        #{edittime,jdbcType=INTEGER},
      </if>
      <if test="starttime != null" >
        #{starttime,jdbcType=INTEGER},
      </if>
      <if test="endtime != null" >
        #{endtime,jdbcType=INTEGER},
      </if>
      <if test="duration != null" >
        #{duration,jdbcType=INTEGER},
      </if>
      <if test="maxtimes != null" >
        #{maxtimes,jdbcType=INTEGER},
      </if>
      <if test="questionnum != null" >
        #{questionnum,jdbcType=INTEGER},
      </if>
      <if test="pointssum != null" >
        #{pointssum,jdbcType=INTEGER},
      </if>
      <if test="examstate != null" >
        #{examstate,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.neuedu.JiemoTest.entity.ExamExample" resultType="java.lang.Integer" >
    select count(*) from exam
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update exam
    <set >
      <if test="record.examid != null" >
        examId = #{record.examid,jdbcType=INTEGER},
      </if>
      <if test="record.userid != null" >
        userId = #{record.userid,jdbcType=INTEGER},
      </if>
      <if test="record.sourceexamid != null" >
        sourceExamId = #{record.sourceexamid,jdbcType=INTEGER},
      </if>
      <if test="record.edittime != null" >
        editTime = #{record.edittime,jdbcType=INTEGER},
      </if>
      <if test="record.starttime != null" >
        startTime = #{record.starttime,jdbcType=INTEGER},
      </if>
      <if test="record.endtime != null" >
        endTime = #{record.endtime,jdbcType=INTEGER},
      </if>
      <if test="record.duration != null" >
        duration = #{record.duration,jdbcType=INTEGER},
      </if>
      <if test="record.maxtimes != null" >
        maxTimes = #{record.maxtimes,jdbcType=INTEGER},
      </if>
      <if test="record.questionnum != null" >
        questionNum = #{record.questionnum,jdbcType=INTEGER},
      </if>
      <if test="record.pointssum != null" >
        pointsSum = #{record.pointssum,jdbcType=INTEGER},
      </if>
      <if test="record.examstate != null" >
        examState = #{record.examstate,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update exam
    set examId = #{record.examid,jdbcType=INTEGER},
      userId = #{record.userid,jdbcType=INTEGER},
      sourceExamId = #{record.sourceexamid,jdbcType=INTEGER},
      editTime = #{record.edittime,jdbcType=INTEGER},
      startTime = #{record.starttime,jdbcType=INTEGER},
      endTime = #{record.endtime,jdbcType=INTEGER},
      duration = #{record.duration,jdbcType=INTEGER},
      maxTimes = #{record.maxtimes,jdbcType=INTEGER},
      questionNum = #{record.questionnum,jdbcType=INTEGER},
      pointsSum = #{record.pointssum,jdbcType=INTEGER},
      examState = #{record.examstate,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.neuedu.JiemoTest.entity.Exam" >
    update exam
    <set >
      <if test="userid != null" >
        userId = #{userid,jdbcType=INTEGER},
      </if>
      <if test="sourceexamid != null" >
        sourceExamId = #{sourceexamid,jdbcType=INTEGER},
      </if>
      <if test="edittime != null" >
        editTime = #{edittime,jdbcType=INTEGER},
      </if>
      <if test="starttime != null" >
        startTime = #{starttime,jdbcType=INTEGER},
      </if>
      <if test="endtime != null" >
        endTime = #{endtime,jdbcType=INTEGER},
      </if>
      <if test="duration != null" >
        duration = #{duration,jdbcType=INTEGER},
      </if>
      <if test="maxtimes != null" >
        maxTimes = #{maxtimes,jdbcType=INTEGER},
      </if>
      <if test="questionnum != null" >
        questionNum = #{questionnum,jdbcType=INTEGER},
      </if>
      <if test="pointssum != null" >
        pointsSum = #{pointssum,jdbcType=INTEGER},
      </if>
      <if test="examstate != null" >
        examState = #{examstate,jdbcType=INTEGER},
      </if>
    </set>
    where examId = #{examid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.neuedu.JiemoTest.entity.Exam" >
    update exam
    set userId = #{userid,jdbcType=INTEGER},
      sourceExamId = #{sourceexamid,jdbcType=INTEGER},
      editTime = #{edittime,jdbcType=INTEGER},
      startTime = #{starttime,jdbcType=INTEGER},
      endTime = #{endtime,jdbcType=INTEGER},
      duration = #{duration,jdbcType=INTEGER},
      maxTimes = #{maxtimes,jdbcType=INTEGER},
      questionNum = #{questionnum,jdbcType=INTEGER},
      pointsSum = #{pointssum,jdbcType=INTEGER},
      examState = #{examstate,jdbcType=INTEGER}
    where examId = #{examid,jdbcType=INTEGER}
  </update>
</mapper>