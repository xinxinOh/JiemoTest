<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.neuedu.JiemoTest.dao.OrderMapper" >
  <resultMap id="BaseResultMap" type="com.neuedu.JiemoTest.entity.Order" >
    <id column="orderId" property="orderid" jdbcType="INTEGER" />
    <result column="userId" property="userid" jdbcType="INTEGER" />
    <result column="goodsId" property="goodsid" jdbcType="INTEGER" />
    <result column="createTime" property="createtime" jdbcType="INTEGER" />
    <result column="bonusPointsNum" property="bonuspointsnum" jdbcType="REAL" />
    <result column="payState" property="paystate" jdbcType="INTEGER" />
    <result column="orderType" property="ordertype" jdbcType="INTEGER" />
    <result column="spare_1" property="spare1" jdbcType="INTEGER" />
    <result column="spare_2" property="spare2" jdbcType="INTEGER" />
    <result column="spare_3" property="spare3" jdbcType="VARCHAR" />
    <result column="spare_4" property="spare4" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    orderId, userId, goodsId, createTime, bonusPointsNum, payState, orderType, spare_1, 
    spare_2, spare_3, spare_4
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.neuedu.JiemoTest.entity.OrderExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from order
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from order
    where orderId = #{orderid,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from order
    where orderId = #{orderid,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.neuedu.JiemoTest.entity.OrderExample" >
    delete from order
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.neuedu.JiemoTest.entity.Order" >
    insert into order (orderId, userId, goodsId, 
      createTime, bonusPointsNum, payState, 
      orderType, spare_1, spare_2, 
      spare_3, spare_4)
    values (#{orderid,jdbcType=INTEGER}, #{userid,jdbcType=INTEGER}, #{goodsid,jdbcType=INTEGER}, 
      #{createtime,jdbcType=INTEGER}, #{bonuspointsnum,jdbcType=REAL}, #{paystate,jdbcType=INTEGER}, 
      #{ordertype,jdbcType=INTEGER}, #{spare1,jdbcType=INTEGER}, #{spare2,jdbcType=INTEGER}, 
      #{spare3,jdbcType=VARCHAR}, #{spare4,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.neuedu.JiemoTest.entity.Order" >
    insert into order
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="orderid != null" >
        orderId,
      </if>
      <if test="userid != null" >
        userId,
      </if>
      <if test="goodsid != null" >
        goodsId,
      </if>
      <if test="createtime != null" >
        createTime,
      </if>
      <if test="bonuspointsnum != null" >
        bonusPointsNum,
      </if>
      <if test="paystate != null" >
        payState,
      </if>
      <if test="ordertype != null" >
        orderType,
      </if>
      <if test="spare1 != null" >
        spare_1,
      </if>
      <if test="spare2 != null" >
        spare_2,
      </if>
      <if test="spare3 != null" >
        spare_3,
      </if>
      <if test="spare4 != null" >
        spare_4,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="orderid != null" >
        #{orderid,jdbcType=INTEGER},
      </if>
      <if test="userid != null" >
        #{userid,jdbcType=INTEGER},
      </if>
      <if test="goodsid != null" >
        #{goodsid,jdbcType=INTEGER},
      </if>
      <if test="createtime != null" >
        #{createtime,jdbcType=INTEGER},
      </if>
      <if test="bonuspointsnum != null" >
        #{bonuspointsnum,jdbcType=REAL},
      </if>
      <if test="paystate != null" >
        #{paystate,jdbcType=INTEGER},
      </if>
      <if test="ordertype != null" >
        #{ordertype,jdbcType=INTEGER},
      </if>
      <if test="spare1 != null" >
        #{spare1,jdbcType=INTEGER},
      </if>
      <if test="spare2 != null" >
        #{spare2,jdbcType=INTEGER},
      </if>
      <if test="spare3 != null" >
        #{spare3,jdbcType=VARCHAR},
      </if>
      <if test="spare4 != null" >
        #{spare4,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.neuedu.JiemoTest.entity.OrderExample" resultType="java.lang.Integer" >
    select count(*) from order
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update order
    <set >
      <if test="record.orderid != null" >
        orderId = #{record.orderid,jdbcType=INTEGER},
      </if>
      <if test="record.userid != null" >
        userId = #{record.userid,jdbcType=INTEGER},
      </if>
      <if test="record.goodsid != null" >
        goodsId = #{record.goodsid,jdbcType=INTEGER},
      </if>
      <if test="record.createtime != null" >
        createTime = #{record.createtime,jdbcType=INTEGER},
      </if>
      <if test="record.bonuspointsnum != null" >
        bonusPointsNum = #{record.bonuspointsnum,jdbcType=REAL},
      </if>
      <if test="record.paystate != null" >
        payState = #{record.paystate,jdbcType=INTEGER},
      </if>
      <if test="record.ordertype != null" >
        orderType = #{record.ordertype,jdbcType=INTEGER},
      </if>
      <if test="record.spare1 != null" >
        spare_1 = #{record.spare1,jdbcType=INTEGER},
      </if>
      <if test="record.spare2 != null" >
        spare_2 = #{record.spare2,jdbcType=INTEGER},
      </if>
      <if test="record.spare3 != null" >
        spare_3 = #{record.spare3,jdbcType=VARCHAR},
      </if>
      <if test="record.spare4 != null" >
        spare_4 = #{record.spare4,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update order
    set orderId = #{record.orderid,jdbcType=INTEGER},
      userId = #{record.userid,jdbcType=INTEGER},
      goodsId = #{record.goodsid,jdbcType=INTEGER},
      createTime = #{record.createtime,jdbcType=INTEGER},
      bonusPointsNum = #{record.bonuspointsnum,jdbcType=REAL},
      payState = #{record.paystate,jdbcType=INTEGER},
      orderType = #{record.ordertype,jdbcType=INTEGER},
      spare_1 = #{record.spare1,jdbcType=INTEGER},
      spare_2 = #{record.spare2,jdbcType=INTEGER},
      spare_3 = #{record.spare3,jdbcType=VARCHAR},
      spare_4 = #{record.spare4,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.neuedu.JiemoTest.entity.Order" >
    update order
    <set >
      <if test="userid != null" >
        userId = #{userid,jdbcType=INTEGER},
      </if>
      <if test="goodsid != null" >
        goodsId = #{goodsid,jdbcType=INTEGER},
      </if>
      <if test="createtime != null" >
        createTime = #{createtime,jdbcType=INTEGER},
      </if>
      <if test="bonuspointsnum != null" >
        bonusPointsNum = #{bonuspointsnum,jdbcType=REAL},
      </if>
      <if test="paystate != null" >
        payState = #{paystate,jdbcType=INTEGER},
      </if>
      <if test="ordertype != null" >
        orderType = #{ordertype,jdbcType=INTEGER},
      </if>
      <if test="spare1 != null" >
        spare_1 = #{spare1,jdbcType=INTEGER},
      </if>
      <if test="spare2 != null" >
        spare_2 = #{spare2,jdbcType=INTEGER},
      </if>
      <if test="spare3 != null" >
        spare_3 = #{spare3,jdbcType=VARCHAR},
      </if>
      <if test="spare4 != null" >
        spare_4 = #{spare4,jdbcType=VARCHAR},
      </if>
    </set>
    where orderId = #{orderid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.neuedu.JiemoTest.entity.Order" >
    update order
    set userId = #{userid,jdbcType=INTEGER},
      goodsId = #{goodsid,jdbcType=INTEGER},
      createTime = #{createtime,jdbcType=INTEGER},
      bonusPointsNum = #{bonuspointsnum,jdbcType=REAL},
      payState = #{paystate,jdbcType=INTEGER},
      orderType = #{ordertype,jdbcType=INTEGER},
      spare_1 = #{spare1,jdbcType=INTEGER},
      spare_2 = #{spare2,jdbcType=INTEGER},
      spare_3 = #{spare3,jdbcType=VARCHAR},
      spare_4 = #{spare4,jdbcType=VARCHAR}
    where orderId = #{orderid,jdbcType=INTEGER}
  </update>
</mapper>